{"ast":null,"code":"var _jsxFileName = \"/home/wolfy/Desktop/WORK/movies/src/components/Home/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport \"./Home.css\";\nimport Header from \"../Header/Header\";\nimport MangasList from \"../MangaList/MangasList\";\nimport { MangaContext } from \"../MangaCont\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const filterStudentInput = useRef(\"\");\n  const [manga, setManga] = useContext(MangaContext);\n  const [listStudentBackup, setlistStudentBackup] = useState([]);\n\n  const filterStudentByTitle = () => {\n    let query = filterStudentInput.current.value;\n    if (query === \"\") setManga([...listStudentBackup]);else {\n      let newlistStudent = [...manga];\n      newlistStudent = newlistStudent.filter(titleStudent => titleStudent.includes(query));\n      setManga([...newlistStudent]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        filter: filterStudentByTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-row\",\n          children: manga.map(m => /*#__PURE__*/_jsxDEV(MangasList, {\n            m: m\n          }, m.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Home, \"wggjBNG9vmc5WbwgJ5UdLtSU05g=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/wolfy/Desktop/WORK/movies/src/components/Home/Home.js"],"names":["React","useContext","useRef","useState","Header","MangasList","MangaContext","Home","filterStudentInput","manga","setManga","listStudentBackup","setlistStudentBackup","filterStudentByTitle","query","current","value","newlistStudent","filter","titleStudent","includes","map","m","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,cAA7B;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,kBAAkB,GAAGN,MAAM,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACK,YAAD,CAApC;AACA,QAAM,CAACK,iBAAD,EAAoBC,oBAApB,IAA4CT,QAAQ,CAAC,EAAD,CAA1D;;AACA,QAAMU,oBAAoB,GAAG,MAAM;AACjC,QAAIC,KAAK,GAAGN,kBAAkB,CAACO,OAAnB,CAA2BC,KAAvC;AACA,QAAIF,KAAK,KAAK,EAAd,EAAkBJ,QAAQ,CAAC,CAAC,GAAGC,iBAAJ,CAAD,CAAR,CAAlB,KACK;AACH,UAAIM,cAAc,GAAG,CAAC,GAAGR,KAAJ,CAArB;AACAQ,MAAAA,cAAc,GAAGA,cAAc,CAACC,MAAf,CAAuBC,YAAD,IACrCA,YAAY,CAACC,QAAb,CAAsBN,KAAtB,CADe,CAAjB;AAGAJ,MAAAA,QAAQ,CAAC,CAAC,GAAGO,cAAJ,CAAD,CAAR;AACD;AACF,GAVD;;AAWA,sBACE;AAAA,2BACE;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAEJ;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACGJ,KAAK,CAACY,GAAN,CAAWC,CAAD,iBACT,QAAC,UAAD;AAAY,YAAA,CAAC,EAAEA;AAAf,aAAuBA,CAAC,CAACC,EAAzB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAcD,CA7BD;;GAAMhB,I;;KAAAA,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\nimport \"./Home.css\";\nimport Header from \"../Header/Header\";\nimport MangasList from \"../MangaList/MangasList\";\nimport { MangaContext } from \"../MangaCont\";\n\nconst Home = () => {\n  const filterStudentInput = useRef(\"\");\n  const [manga, setManga] = useContext(MangaContext);\n  const [listStudentBackup, setlistStudentBackup] = useState([]);\n  const filterStudentByTitle = () => {\n    let query = filterStudentInput.current.value;\n    if (query === \"\") setManga([...listStudentBackup]);\n    else {\n      let newlistStudent = [...manga];\n      newlistStudent = newlistStudent.filter((titleStudent) =>\n        titleStudent.includes(query)\n      );\n      setManga([...newlistStudent]);\n    }\n  };\n  return (\n    <>\n      <div>\n        <Header filter={filterStudentByTitle}></Header>\n        <main>\n          <div className=\"first-row\">\n            {manga.map((m) => (\n              <MangasList m={m} key={m.id} />\n            ))}\n          </div>\n        </main>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}